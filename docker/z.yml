docker:
    dependencies:
        php: 7.1
        composer: 1.6.3
    defaults:
        compose:
            name: local

tasks:
    # We need this for more than command, so use YML "inheritance" here.
    _docker.settings: &DOCKER_SETTINGS
        opts:
            name: docker.defaults.compose.name
        set:
            _local_file: |
                cat(cwd, "/docker-compose.yml")
            _cmd: |
                cat(
                    "sudo PWD=", cwd, " COMPOSE_PROJECT_NAME=", name, " docker-compose ",
                    cat(" -f ", _local_file)
                )
    docker.up:
        <<: *DOCKER_SETTINGS
        help: |
            Put all containers for the local docker config up.
        flags:
            kill: false
            up: true
            bg: true
        args:
            container: ? ""
        pre:
            - if [ -e /var/www/localhost ]; then sudo rm /var/www/localhost; fi
            - sudo ln $(VERBOSE ? "-v") -sf $(cwd)/$(is_dir("web") ? "web/") /var/www/localhost;
        do:
            - @(if kill) $(_cmd) kill $(container)
            - @(if up)   $(_cmd) up $(bg ? "-d") $(container)

    docker.logs:
        <<: *DOCKER_SETTINGS
        help: |
            Show log output of the dockers
        do: $(_cmd) logs

    docker.build:
        <<: *DOCKER_SETTINGS
        help: |
            Builds the containers specified in the compose file
        args:
            container: ? ""
        do: $(_cmd) build $(container)

    docker.sh:
        <<: *DOCKER_SETTINGS
        help: |
            Opens a shell to a running container
        args:
            container: ? ""
            index: "1"
        do: @(with true as INTERACTIVE) sudo docker exec -ti $(name)_$(container)_$(index) "/bin/bash"

    docker.ps:
        <<: *DOCKER_SETTINGS
        help: |
            Show running processes
        do: $(_cmd) ps

    docker.ips:
        <<: *DOCKER_SETTINGS
        help: |
            Dump a list of IPS per service as yml
        do: |
            echo "parameters:"
            for id in $$($(_cmd) ps -q); do
                sudo docker inspect --format '   {{ index .Config.Labels "com.docker.compose.service" }}_host: {{ .NetworkSettings.IPAddress }}' $id;
            done;

    docker.console:
        <<: *DOCKER_SETTINGS
        help: |
            Run a console command inside the php-fpm container.
        args:
            all: ? ""
        do: @(with true as INTERACTIVE) docker-compose exec php_fpm env PHP_IDE_CONFIG="serverName=app" php -d xdebug.remote_host=172.17.0.1 app/console --env=development $(all ? all : "")

    docker.composer_install:
        <<: *DOCKER_SETTINGS
        args:
            composer_version: ? docker.dependencies.composer
        do: |
          export COMPOSER_DIRECTORY=~/.zicht/composer/$(composer_version)

          if [ -d "$COMPOSER_DIRECTORY" ]; then
            exit 0;
          else
            mkdir -p "$COMPOSER_DIRECTORY"
            cd "$COMPOSER_DIRECTORY"

            EXPECTED_SIGNATURE="$$(wget -q -O - https://composer.github.io/installer.sig)"
            $$(which php) -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            ACTUAL_SIGNATURE="$$($$(which php) -r "echo hash_file('SHA384', 'composer-setup.php');")"

            if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
            then
                >&2 echo 'ERROR: Invalid installer signature'
                rm composer-setup.php
                exit 1
            fi

            $$(which php) composer-setup.php --quiet --version=$(composer_version) --filename=composer
            chmod +x "$COMPOSER_DIRECTORY/composer"
            "$COMPOSER_DIRECTORY/composer" --ansi --version --no-interaction
            RESULT=$?
            rm composer-setup.php
            exit $RESULT
          fi

    docker.composer:
        <<: *DOCKER_SETTINGS
        help: |
            Run composer
        args:
            all: ? "list"
        do: |
          @(with true as INTERACTIVE)
          echo "Running on docker.zicht.nl/php-composer:$(docker.dependencies.php)-$(docker.dependencies.composer)"
          docker run -m=4g \
          --add-host=packages.dev3.zicht.intern:192.168.90.23 \
          --add-host=satis.dev3.intern:192.168.90.23 \
          --add-host=remote.satis.dev3.intern:192.168.90.23 \
          --add-host=remote.satis.dev3.zicht.intern:192.168.90.23 \
          --add-host=packagist.zicht.intern:192.168.90.10 \
          --interactive \
          --rm \
          --user $$(id -u):$$(id -g) \
          --volume /home/$$(whoami)/.ssh:/home/$$(whoami)/.ssh:ro \
          --volume /etc/passwd:/etc/passwd:ro \
          --volume /etc/group:/etc/group:ro \
          --volume $$(pwd):/app \
          --volume $$(pwd):$$(pwd) \
          --volume /home/$$(whoami)/.gitconfig:/home/$$(whoami)/.gitconfig \
          --volume $SSH_AUTH_SOCK:/ssh-auth.sock \
          --env SSH_AUTH_SOCK=/ssh-auth.sock \
          --env APPLICATION_ENV=development \
          docker.zicht.nl/php-composer:$(docker.dependencies.php)-$(docker.dependencies.composer) --ansi $(all)

    docker.info:
        <<: *DOCKER_SETTINGS
        help: |
            Shows some useful information about the current docker setup
        do:
            - |
                echo "Command used: $(_cmd)"
            - |
                $(z.cmd) $(z.opts) docker:ps
            - |
                echo "YAML config:"
                echo $(_local_file)
            - |
                @(if VERBOSE)
                cat $(_local_file)
